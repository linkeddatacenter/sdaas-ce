# Copyright (C) 2019-2020 LinkedData.Center - All Rights Reserved
# Permission to copy and modify is granted under the MIT license
if [ ! -z ${__module_asserting+x} ]; then return ; else __module_asserting=1 ; fi

SD_VERBOSE=${SD_VERBOSE:=1}

##
# @description: shows a string to std error if verbose > 0
# @arg $1 a string
##
function SD_FATAL_ERROR {
	if [ "$SD_VERBOSE" -gt 0 ]; then 
		>&2 echo "$1"
		exit 1
	fi 
}


##
# @description: tests that an enviroment variable exists
# @arg $1 var name
##
function SD_REQUIRES_VAR {
    local var
	for var in "$@"; do
		local value=${!var}
		if [  -z  "$value" ]; then
			SD_FATAL_ERROR "Mandatory environment variable $var not defined."
		fi	
	done
}

##
# @description: tests that a command exists
# @arg $1 command name
##
function SD_REQUIRES_CMD {
    local cmd
	for cmd in "$@" ; do
		hash $cmd 2>/dev/null || SD_FATAL_ERROR "I require $cmd but it it's not installed."
	done
}


##
# @description: includes a file only if it was not already include
#	it try first to load the file
#	than to load from local script directory addindg .include extension
#   than from sdaas installation directory addindg .include extension
#
# @arg $1 include file
# @arg $2..$# paramether passed to source to drive include special behaviour
## 
function SD_INCLUDE {
  SD_REQUIRES_VAR _SDAAS_DIR
  local -r file="$1"
  shift
  
  # test if the module was already included
  if eval "[ ! -z \${__module_${file}+x} ]" ; then return  ; fi

  if [ -f "$file" ]; then
  	source "$file" "$@"  
  elif [ -f "$_SDAAS_DIR/$file.include" ] ; then
  	source "$_SDAAS_DIR/$file.include" "$@"  "$@" 
  else 
  	source "$(pwd)/scripts/$file.include" "$@"  "$@"
  fi
}
