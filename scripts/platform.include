# Copyright (C) 2019-2020 LinkedData.Center - All Rights Reserved
# Permission to copy and modify is granted under the MIT license
if [ ! -z ${__module_platform+x} ]; then return ; else __module_platform=1 ; fi
SD_QUADSTORE=${SD_QUADSTORE:-kb}
SD_DEBUG=${SD_DEBUG:-0}
SD_ACCRUAL_POLICY=${SD_ACCRUAL_POLICY:-pull}

_SD_REBOOT=${_SD_REBOOT:-0}
_SD_RELEASE_NAME="Anassimene"

_SD_START=$SECONDS
_SDAAS_DIR=${_SDAAS_DIR:-$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )}

# READ SECRETS FROM .env file
if [ -f .env ]; then
	if [ "$(stat -c "%a" .env)" != "600" ]; then
		>&2 echo "WARNING: consider to set permission to .env file to 600 (i.e. for your eyes only)!"
	fi
	. .env
fi


########################################################################################
# INCLUDING CORE COMPONENTS
########################################################################################
source "$_SDAAS_DIR/asserting.include"
SD_INCLUDE caching
SD_INCLUDE logging
SD_INCLUDE bg_reasoning
SD_INCLUDE $SD_QUADSTORE
SD_INCLUDE learning
SD_INCLUDE reasoning
SD_INCLUDE teaching


function SD_BEGIN_INGESTION {
	_SD_START=$SECONDS
	# Cleanup the entire knowledge base
	SD_CLEAN_CACHE
	SD_START_LOGGING
	
	# Auto Warmup rdfstore
	if [ $SD_NOWARMUP -eq 0 ]; then
		SD_WARMUP
	fi
	
	SD_LOG "LinkedData.Center SDaaS platform ($_SD_RELEASE_NAME) using '$SD_QUADSTORE' graph technology."
	if [ $_SD_REBOOT -eq 1 ]; then 
		SD_LOG "Erasing the knowledge base... (it could take a while)"
		SD_SPARQL_UPDATE "DROP ALL"; 
	fi
}


function SD_THATS_ALL_FOLKS {
	#SD_LOG "Computing knowledge base configuration default axioms."
	#SD_SPARQL_UPDATE @$_SDAAS_DIR/axioms/sdaas-axioms.sparq_update
	local inconsistentGraphs="$(SD_SPARQL_QUERY csv-h "@$_SDAAS_DIR/axioms/uncompleted_graphs.sparq_select")"
	if [ -z "$inconsistentGraphs" ] ; then
		SD_LOG "Knowledge ingestion succesfully completed in $(( SECONDS - _SD_START )) seconds."
		return 0
	else 
		SD_LOG "WARNING: the knowledge base contains following inconsistent graphs:"
		echo "$inconsistentGraphs"
		return 1
	fi
}



function SD_STATUS {
	cat <<-EOT
		Smart Data as a Service (SDaaS) platform vocabulary
		Copyright (C) 2018-2020 http://linkeddata.center/
			
		Configuration variables:
		-------------------
		  
		$(set | egrep "^SD_.+=")
		 	
		 	
		Available functions:
		-------------------
		 	
		$(set | egrep "^SD_.+ ()")
		 	
		 	
		Enabled modules:
		-----------------
		 	
		$(set | egrep "^__module_" | sed 's/__module_//' | sed 's/=1//')
		
	EOT
}


########################################################################################
# EXECUTE SCRIPT INITIALIZATON
########################################################################################

SD_BEGIN_INGESTION