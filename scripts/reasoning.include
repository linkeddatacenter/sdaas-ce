# Copyright (C) 2019 LinkedData.Center - All Rights Reserved
# Permission to copy and modify is granted under the MIT license
if [ ! -z ${__module_reasoning+x} ]; then return ; else __module_reasoning=1 ; fi

SD_INCLUDE activity
SD_INCLUDE curl_utils

SD_REQUIRES_CMD mktemp SD_SPARQL_QUERY

## just for legacy compatibility
function SD_REASONING_BY { $* ; }

function SD_EVAL_CONSTRUCTOR {
	SD_REQUIRES_VAR 1 2
	local graphName="$1"
	local constructor="$2"
	
	# start an activity in not yes started
	if [ "$_SD_ACTIVITY_STATUS" != "running" ] ; then
		_SD_START_ACTIVITY "reasoning on graph <$graphName>"
	fi
	
	local queryResult=${3:-"${SD_ACTIVITY_DIR}/out/construction.ttl"}	
	
	# If constructor is an URL, download it first
	if [[ "${constructor:0:10}" =~ "://" ]]; then
		local queryFile="${SD_ACTIVITY_DIR}/in/constructor.query"
		_SD_CURL_DOWNLOADER "$constructor" "$queryFile" || SD_FATAL "Unable to download ${constructor:0:40}"
		constructor="@$queryFile"
	fi
	
	_SD_ACTIVITY_LOG "evaluating axiom ${constructor:0:60}..."
	if SD_SPARQL_QUERY "text/turtle" "$constructor" > "$queryResult" ; then
		_SD_COMMIT_ACTIVITY "$graphName"
	else
		_SD_INVALIDATE_GRAPH "$graphName"
	 	return 1
	fi
}

